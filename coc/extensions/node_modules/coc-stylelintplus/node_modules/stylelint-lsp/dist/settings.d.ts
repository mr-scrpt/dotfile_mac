import { ClientCapabilities, CodeActionKind, DidChangeConfigurationParams, IConnection, TextDocument, TextDocumentIdentifier } from "vscode-languageserver";
import globalStylelint from "stylelint";
export declare const defaultClientSettings: {
    autoFixOnFormat: boolean;
    autoFixOnSave: boolean;
    config: Partial<globalStylelint.Configuration> | undefined;
    configFile: string | undefined;
    configOverrides: Partial<globalStylelint.Configuration> | undefined;
    enable: boolean;
    validateOnSave: boolean;
    validateOnType: boolean;
};
export declare type ClientSettings = typeof defaultClientSettings;
export interface ServerSettings extends ClientSettings {
    lint: typeof globalStylelint["lint"];
}
export default class Settings {
    private connection;
    private supportsConfigurationRequests;
    private globalSettings;
    private documentToSettings;
    private pathToStylelint;
    private failedDocuments;
    private _supportedCodeActionLiterals;
    constructor(connection: IConnection);
    initialize(capabilities: ClientCapabilities): void;
    resolve(document: TextDocumentIdentifier): Thenable<ServerSettings>;
    private lintFunc;
    private resolveStylelint;
    clientConfigurationChanged(params: DidChangeConfigurationParams): void;
    clearFailedDocuments(): void;
    closeDocument(document: TextDocument): void;
    get supportedCodeActionLiterals(): CodeActionKind[];
}
